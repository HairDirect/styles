.btn, .cta, button {
	@include taptarget;
	height: 2em;
	@include transition($transition);
	margin: 0;

	@include font(1, 500, 2.2, true);

	&.small {
		@include taptarget(-2);
		@include line-height(1, true);
	}

	@media #{$lap} {
		font-weight: 300;
	}
}

.tertiary {
	text-transform: uppercase;
	font-weight: bold;
	font-size: 12px;
	border: 1px solid $gray10;
	border-radius: 4px;
	background-color: $white;
	color: $gray18;
	@include transition($transition);

	&:hover, &:focus, &:active {
		border-color: $gray24;
	}

	&:hover, &:focus {
		background-color: $gray25;
	}

	&:active {
		background-color: $gray26;
	}
}

.tertiary-hover {
	background-color: $gray25;
}

.add {
	&:before {
		@include pseudo(1.2em, 2em, "+");
		text-align: center;
		font-size: 1.25em;
		font-weight: 300;
	}
}

.remove {
	@include transition($transition);
	padding-left: 0.25em;

	@media #{$lap} {
		padding-left: .75em;
	}

	&:before {
		@include pseudo(1.2em, 2em, "\2715");
		text-align: left;
		font-size: 1em;
		font-weight: 300;
	}

	&:hover {
		background-color: $red;
		color: $white;
	}
}

.btn_group {
	@include rem-attribute('margin-bottom', 1);

	input[type=radio] + label {
		&.btn_group_item {
			text-align: center;
			@extend .btn--secondary;
			@extend .btn--beta;
			border-radius: 0 !important;
			@include transition(none);

			&:first-of-type {
				border-top-left-radius: $brand-round !important;
				border-bottom-left-radius: $brand-round !important;
			}

			&:last-of-type {
				border-top-right-radius: $brand-round !important;
				border-bottom-right-radius: $brand-round !important;
			}
		}
	}

	input[type=radio]:checked + label {
		&.btn_group_item {
			@extend .btn--alpha;

			&:hover, &:focus, &:active {
				@include transition(none);
				@include alpha-background;
			}
		}
	}
}

%round-button-selected {
	@include transition($transition);
	background-color: $blue4;
	border-color: $blue4;
	color: $white;

	svg {
		path {
			fill: $white;
		}
	}
}

.round-button {
	@include rem-attribute('width', 2);
	@include rem-attribute('height', 2);
	border-radius: $circle;
	border: 1px solid $gray10;
	background-color: $white;
	position: relative;
	cursor: pointer;
	@include transition($transition);

	svg {
		height: 100%;
		width: 100%;

		path {
			@include transition($transition);
			fill: $gray18;
		}
	}

	&:hover {
		@extend %round-button-selected;
	}
	/* Size overrides */
	&.small {
		position: relative;
		width: 1em;
		height: 1em;

		svg {
			position: absolute;
			top: 2px;
			height: 12px;
			width: 12px;
			right: 2px;
		}
	}
	/* Negative overrides */
	&.negative {
		border-color: $gray27;

		&:hover {
			background-color: $red;
			border-color: $medium-red;

			svg {
				path {
					fill: $white;
				}
			}
		}

		svg {
			path {
				fill: $gray27;
			}
		}
	}
}

.card {
	overflow: hidden;
	padding: 1em;
	margin-bottom: 1em;
	border: 1px solid $medium-gray;
	border-radius: $brand-round;
	@include gradient-background($white-smoke, $white);
	@include box-shadow-light;
	color: $gray18;

	&.info {
		background-image: none;
		background-color: $yellow;
		border-bottom-color: $dark-yellow;
		color: $gray12;
		@include font-size(1);

		> p {
			margin-bottom: 0;
		}
	}
}

.no-touch .card {
	@include transition($transition);
}

.error, .error > * {
	color: $red;
}

.loading-panel {
	width: 200px;
	height: 100px;
	padding-top: 20px;
	margin: 0 auto;
	text-align: center;

	p {
		display: block;
		clear: both;
		margin: 2em auto 4em;
		text-align: center;
		-webkit-animation: grey 2s infinite ease-in-out;
		-moz-animation: grey 2s infinite ease-in-out;
		animation: grey 2s infinite ease-in-out;
	}
}
